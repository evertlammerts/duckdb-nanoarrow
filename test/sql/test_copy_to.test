# name: test/sql/test_copy_to.test
# description: test copy to functionality and options
# group: [nanoarrow]

# Require statement will ensure this test is run with this extension loaded
require nanoarrow

statement ok
CREATE TABLE test AS SELECT * FROM read_arrow('__WORKING_DIRECTORY__/data/test.arrows');

# Try extensions without the format options
statement ok
COPY test TO '__TEST_DIR__/test.arrows'

statement ok
COPY test TO '__TEST_DIR__/test.arrow'

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test.arrows');
----
15487

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test.arrows');
----
15487


# Lets test the writing options
# row_group_size: The size of a row group. By default, the value is 122,880. A lower value may reduce performance but can be beneficial for streaming.

statement ok
COPY test TO '__TEST_DIR__/test_row_group.arrow' (row_group_size 10)

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test_row_group.arrow');
----
15487

statement ok
COPY test TO '__TEST_DIR__/test_row_group.arrow' (chunk_size 10)

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test_row_group.arrow');
----
15487

statement ok
COPY test TO '__TEST_DIR__/test_row_group.arrow' (row_group_size 100, chunk_size 10)

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test_row_group.arrow');
----
15487

statement error
COPY test TO '__TEST_DIR__/test_row_group.arrow' (row_group_size_bytes 100)
----
ROW_GROUP_SIZE_BYTES does not work while preserving insertion order. Use "SET preserve_insertion_order=false;" to disable preserving insertion order.

statement ok
SET preserve_insertion_order=false;

statement ok
COPY test TO '__TEST_DIR__/test_row_group.arrow' (row_group_size_bytes 100)

query I
SELECT count(*) FROM read_arrow('__TEST_DIR__/test_row_group.arrow');
----
15487


# This crashes
# statement ok
# COPY test TO '__TEST_DIR__/test_row_group.arrow' (chunk_size 10, row_groups_per_file 1)
#
# query I
# SELECT count(*) FROM read_arrow('__TEST_DIR__/test_row_group.arrow');
# ----
# 15487

# chunk_size: An alias for the row_group_size parameter.
# row_group_size_bytes: The size of row groups in bytes.
# row_groups_per_file: The maximum number of row groups per file.
# kv_metadata: Key-value metadata to be added to the file footer.
